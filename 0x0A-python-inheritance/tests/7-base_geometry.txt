>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0
>>> bg.integer_validator("number", 15)
>>> bg.integer_validator("name", "Francis")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", "15")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", [15])
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", {15, 14, 13})
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", (7,))
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("float", 2.2)
Traceback (most recent call last):
...
TypeError: float must be an integer
>>> bg.integer_validator("floatNeg", -2.2)
Traceback (most recent call last):
...
TypeError: floatNeg must be an integer
>>> bg.integer_validator("negative", -15)
Traceback (most recent call last):
...
ValueError: negative must be greater than 0
>>> bg.integer_validator("bool", True)
Traceback (most recent call last):
...
TypeError: bool must be an integer
>>> bg.integer_validator("name")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

